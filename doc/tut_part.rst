Atoms-in-Molecules (AIM) analysis
#################################

Introduction
============

Horton supports several real-space atoms-in-molecules (AIM) schemes. A
wavefunction or an electronic density on a grid can be loaded from several
file formats, both for isolated and periodic systems. With this input, several
AIM schemes can be used to derive AIM observables, e.g. atomic charge, atomic
multipole expansion, etc.

Horton supports two different approaches to perform the partitioning: WPart
(based on wavefunction files) and CPart (based on cube files). Both
implementations build on the same algorithms but use different types of
grids for the numerical integrals. An overview of both implementations is
given in the following table:

======================== =========================== =========================== ============
Feature                  WPart                       CPart                       References
======================== =========================== =========================== ============
Command-line script      ``horton-wpart.py``         ``horton-cpart.py``
**Boundary conditions**
0D                       X                           X
1D                                                   X
2D                                                   X
3D                                                   X
**Input file formats**
Gaussian03/09 fchk       X                                                       http://www.gaussian.com/
Molekel (Orca)           X                                                       http://cec.mpg.de/forum/
Molden input (Orca)      X                                                       http://cec.mpg.de/forum/
Gaussian03/09 cube                                   X                           http://www.gaussian.com/
Vasp CHGCAR                                          X                           https://www.vasp.at/
**AIM schemes**
Becke                    X                                                       [becke1988_multicenter]_
Hirshfeld                X                           X                           [hirshfeld1977]_
Iterative Hirshfeld      X                           X                           [bultinck2007]_
Extended Hirshfeld       X                           X                           [verstraelen2013]_
**AIM properties**
Charges                  X                           X
Multipoles               X                           X
Radial moments           X                           X
Dispersion coefficients  X                           X                           [tkatchenko2009]_
**Extra options**
Symmetry analysis                                    X
======================== =========================== =========================== ============

Note that cube files can be generated with many other codes like CPMD, ADF,
Siesta, Crystal, etc. The output of all these program should be compatible with
Horton. Horton is can partition both all-electron and pseudo-potential results.
However, for all-electron partitioning with CPart, very fine grids are required.

For all the Hirshfeld variants, one must first set up a database of proatomic
densities, preferably at the same level of theory used for the molecular
computation. The script ``horton-atomdb.py`` facilitate the setup of such a
database.

All output generated by Horton is written to `HDF5
<http://www.hdfgroup.org/HDF5/>`_ files (with extension ``.h5``). These are
binary (compact) platform-independent files that can be post-processed easily
with Python scripts. The script ``horton-hdf2csv.py`` can be used to convert
(part of) an HDF5 file into the "comma-separated value" (CSV) format, which is
suitable for spreadsheet software.

The usage of the four scripts (``horton-atomdb.py``, ``horton-wpart.py``,
``horton-cpart.py`` and ``horton-hdf2csv.py``) will be discussed in the
following sections. The last section shows how one can use the partitioning
code through the Python interface.


``horton-atomdb.py`` -- Set up a database of proatoms
=====================================================

``horton-wpart.py`` -- AIM analysis based on a wavefunction file
================================================================

``horton-cpart.py`` -- AIM analysis based on a cube file
========================================================

``horton-hdf2csv.py`` -- Conversion of HDF5 files to CSV format
===============================================================

Python interface to the partitioning code
=========================================








